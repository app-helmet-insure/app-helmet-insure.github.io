{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./server/index.js","webpack:///external \"koa\"","webpack:///external \"nuxt\"","webpack:///./nuxt.config.js","webpack:///./assets/js/precision.js","webpack:///./assets/js/util.js","webpack:///./config/api.config.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Koa","require","Nuxt","Builder","ApiConfig","app","config","dev","env","async","host","process","HOST","port","PORT","nuxt","ready","builder","build","use","ctx","next","req","locale","cookies","indexOf","acceptLanguage","headers","set","domain","maxAge","httpOnly","status","respond","render","res","listen","console","log","start","router","middleware","telemetry","head","title","meta","charset","content","hid","npm_package_description","link","rel","type","href","script","loading","color","css","plugins","buildModules","axios","proxy","target","pathRewrite","extend","generate","dir","subFolders","times","num1","num2","others","length","this","num1Changed","float2Fixed","num2Changed","baseNum","digitLength","Math","pow","plus","max","minus","divide","num1Change","num2Change","divide2","arg1","arg2","r1","r2","t1","t2","toString","split","e","Number","replace","round","num","ratio","base","dlen","eSplit","len","checkBoundary","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","protocol","random","keyR","RegExp","expiredTime","Date","domainList","document","urlItems","unshift","pop","mainHost","join","cookie","test","getMainHost","window","location","err","baseUrl"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Koa = require(\"koa\");\n// const consola = require('consola')\nconst { Nuxt, Builder } = require(\"nuxt\");\nconst ApiConfig = require(\"../config/api.config.js\");\nconst app = new Koa();\n\n// Import and Set Nuxt.js options\nconst config = require(\"../nuxt.config.js\");\nconfig.dev = app.env !== \"production\";\n\nasync function start() {\n  // Instantiate nuxt.js\n  const host = process.env.HOST || \"0.0.0.0\";\n  const port = process.env.PORT || 30001;\n\n  const nuxt = new Nuxt(config);\n\n  // const {\n\n  // } = nuxt.options.server\n\n  await nuxt.ready();\n  // Build in development\n  if (config.dev) {\n    const builder = new Builder(nuxt);\n    await builder.build();\n  }\n\n  app.use(async (ctx, next) => {\n    ctx.req.locale = ctx.cookies.get(\"lang\");\n    if (!ctx.req.locale) {\n      let acceptLanguage = ctx.req && ctx.req.headers[\"accept-language\"];\n      if (acceptLanguage) {\n        if (~acceptLanguage.indexOf(\"zh_CN\") > -1) {\n          acceptLanguage = \"zh_CN\";\n        }\n        if (~acceptLanguage.indexOf(\"en_US\")) {\n          acceptLanguage = \"en_US\";\n        }\n        // if (~acceptLanguage.indexOf('CN')) {\n        //   acceptLanguage = 'zh-cn'\n        // }\n\n        if (~[\"en_US\", \"zh_CN\"].indexOf(acceptLanguage)) {\n          ctx.cookies.set(\"lang\", acceptLanguage, {\n            domain: ApiConfig.domain,\n            maxAge: 3600 * 24 * 10,\n            httpOnly: false,\n          });\n          ctx.req.locale = acceptLanguage;\n        }\n      }\n    } else {\n      if (~ctx.req.locale.indexOf(\"en_US\")) {\n        ctx.req.locale = \"en_US\";\n      }\n    }\n    // ctx.req.locale = \"en_US\";\n    await next();\n  });\n\n  app.use((ctx) => {\n    ctx.status = 200;\n    ctx.respond = false; // Bypass Koa's built-in response handling\n    ctx.req.ctx = ctx; // This might be useful later on, e.g. in nuxtServerInit or with nuxt-stash\n    nuxt.render(ctx.req, ctx.res);\n  });\n\n  app.listen(port, host);\n  // consola.ready({\n  //   message: `Server listening on http://${host}:${port}`,\n  //   badge: true\n  // })\n  console.log(`Server listening on http://${host}:${port}`);\n}\n\nstart();\n","module.exports = require(\"koa\");","module.exports = require(\"nuxt\");","module.exports = {\n    mode: 'universal',\n    router: {\n        middleware: 'i18n',\n    },\n    telemetry: false,\n    /*\n     ** Headers of the page\n     */\n    head: {\n        title: 'helmet1.0' || process.env.npm_package_name,\n        meta: [\n            { charset: 'utf-8' },\n            {\n                name: 'viewport',\n                content: 'width=device-width, initial-scale=1.0',\n            },\n            {\n                hid: 'description',\n                name: 'description',\n                content: process.env.npm_package_description || '',\n            },\n        ],\n        link: [{ rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }],\n        script: [\n            // {\n            //   src: \"/js/iconfont.js\"\n            // },\n            // {\n            //   src: \"/js/tronweb.js\"\n            // }\n        ],\n    },\n    /*\n     ** Customize the progress-bar color\n     */\n    loading: { color: '#fff' },\n    /*\n     ** Global CSS\n     */\n    css: ['~assets/css/main.scss', '~assets/css/animate.css'],\n    /*\n     ** Plugins to load before mounting the App\n     */\n    plugins: [\n        '~plugins/i18n.js',\n        '~plugins/bus-inject.js',\n        '~plugins/filter.js',\n        '~plugins/c-ui.js',\n    ],\n    /*\n     ** Nuxt.js dev-modules\n     */\n    buildModules: [],\n    /*\n     ** Nuxt.js modules\n     */\n    // axios和proxy 暂时用不上\n    modules: ['@nuxtjs/axios', '@nuxtjs/proxy'],\n    axios: {\n        proxy: true,\n    },\n    proxy: {\n        '/api': {\n            target: 'https://api.helmet.insure',\n            pathRewrite: {\n                '^/api': '/',\n            },\n        },\n    },\n    /*\n     ** Build configuration\n     */\n    build: {\n        /*\n         ** You can extend webpack config here\n         */\n        extend(config, ctx) {},\n    },\n    generate: {\n        dir: 'docs',\n        subFolders: false,\n    },\n};\n","class Precision {\n  // 乘法\n  times(num1, num2, ...others) {\n    if (others.length > 0) {\n      return this.times(this.times(num1, num2), ...others);\n    }\n    num1 = num1 || 0;\n    num2 = num2 || 0;\n    const num1Changed = this.float2Fixed(num1);\n    const num2Changed = this.float2Fixed(num2);\n    // 把两个数的小数位数相加\n    const baseNum = this.digitLength(num1) + this.digitLength(num2);\n    const leftValue = num1Changed * num2Changed;\n    // this.checkBoundary(leftValue)\n    return leftValue / Math.pow(10, baseNum);\n  }\n  // 精确加法\n  plus(num1, num2, ...others) {\n    if (others.length > 0) {\n      return this.plus(this.plus(num1, num2), ...others);\n    }\n    const baseNum = Math.pow(\n      10,\n      Math.max(this.digitLength(num1), this.digitLength(num2))\n    );\n    return (this.times(num1, baseNum) + this.times(num2, baseNum)) / baseNum;\n  }\n  // 精确减法\n  minus(num1, num2, ...others) {\n    if (others.length > 0) {\n      return this.minus(this.minus(num1, num2), ...others);\n    }\n    const baseNum = Math.pow(\n      10,\n      Math.max(this.digitLength(num1), this.digitLength(num2))\n    );\n    return (this.times(num1, baseNum) - this.times(num2, baseNum)) / baseNum;\n  }\n  // 精确除法\n  divide(num1, num2, ...others) {\n    if (others.length > 0) {\n      return this.divide(this.divide(num1, num2), ...others);\n    }\n    const num1Change = this.float2Fixed(num1);\n    const num2Change = this.float2Fixed(num2);\n    return this.times(\n      num1Change / num2Change,\n      Math.pow(10, this.digitLength(num2) - this.digitLength(num1))\n    );\n  }\n  // 精确除法2\n  divide2(arg1, arg2) {\n    let t1 = 0;\n    let t2 = 0;\n    let r1, r2;\n    try {\n      t1 = arg1.toString().split(\".\")[1].length;\n    } catch (e) {}\n    try {\n      t2 = arg2.toString().split(\".\")[1].length;\n    } catch (e) {}\n    r1 = Number(arg1.toString().replace(\".\", \"\"));\n    r2 = Number(arg2.toString().replace(\".\", \"\"));\n    return (r1 / r2) * Math.pow(10, t2 - t1);\n  }\n  // 四舍五入，且保留小数\n  round(num, ratio) {\n    const base = Math.pow(10, ratio);\n    return this.divide(Math.round(this.times(num, base)), base);\n  }\n  // 把小数转成整数，支持科学计数法。如果是小数则放大成整数\n  float2Fixed(num) {\n    if (!~num.toString().indexOf(\"e\")) {\n      return Number(num.toString().replace(\".\", \"\"));\n    }\n    const dlen = this.digitLength(num);\n    return dlen > 0 ? num * Math.pow(10, dlen) : num;\n  }\n  // 获取当前数小数位的长度(处理科学计数法，本质上处理e-n的情况)\n  digitLength(num) {\n    const eSplit = num.toString().split(/[eE]/);\n    const len = (eSplit[0].split(\".\")[1] || \"\").length - (+eSplit[1] || 0);\n    return len > 0 ? len : 0;\n  }\n  //  检测数字是否越界，如果越界给出提示\n  checkBoundary(num) {\n    if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\n      console.log(\n        `${num} is beyond boundary when transfer to integer, the results may not be accurate`\n      );\n    }\n  }\n}\n\nexport default new Precision();\n","import precision from \"./precision\";\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nexport function getProtocol() {\n  const p = window.location.protocol;\n  const h = p.split(\":\")[0];\n  return h;\n}\n\nexport function getMainHost() {\n  let key = `mh_${Math.random()}`;\n  let keyR = new RegExp(`(^|;)\\\\s*${key}=12345`);\n  let expiredTime = new Date(0);\n  let domain = document.domain;\n  let domainList = domain.split(\".\");\n\n  let urlItems = [];\n  urlItems.unshift(domainList.pop());\n  while (domainList.length) {\n    urlItems.unshift(domainList.pop());\n    let mainHost = urlItems.join(\".\");\n    let cookie = `${key}=${12345};domain=.${mainHost}`;\n\n    document.cookie = cookie;\n\n    if (keyR.test(document.cookie)) {\n      document.cookie = `${cookie};expires=${expiredTime}`;\n      return mainHost;\n    }\n  }\n}\n\nexport const autoprefixer = function(style) {\n  if (typeof style !== \"object\") return style;\n  const rules = [\"transform\", \"transition\", \"animation\"];\n  const prefixes = [\"ms-\", \"webkit-\"];\n  rules.forEach((rule) => {\n    const value = style[rule];\n    if (rule && value) {\n      prefixes.forEach((prefix) => {\n        style[prefix + rule] = value;\n      });\n    }\n  });\n  return style;\n};\n\n// 精度计算E+处理方法\nexport const fixDEAdd = (num, precision, autoFix = true) => {\n  if (`${num}` === \"0\") {\n    // if (!window.parseFloat(precision) || !autoFix) return 0;\n    if (!parseFloat(precision) || !autoFix) return 0;\n    return \"0.\".padEnd(precision + 2, \"0\");\n  }\n  if (!num) return \"--\";\n  const number = parseFloat(num);\n  const strN = num.toString();\n  const flag = number < 0;\n  let result = strN;\n\n  if (strN.toLowerCase().indexOf(\"e\") > -1) {\n    const n = strN.match(/(\\d+?)(?:\\.(\\d*))?e([+-])(\\d+)/);\n    const nl = n[1]; // 小数点左边\n    const nr = n[2]; // 小数点右边\n    const type = n[3]; //  + / -\n    const floatN = n[4]; // 科学计数法的位数\n    let params = \"\";\n    let pr = nr ? nr.substr(floatN) : \"\";\n\n    if (pr) pr = `.${pr}`;\n    if (type !== \"-\") {\n      for (let i = 0; i < floatN; i += 1) {\n        const p = nr[i] || \"0\";\n        params += p;\n      }\n      result = nl + params + pr;\n    } else {\n      let strl = \"0\";\n      for (let i = 0; i < floatN; i += 1) {\n        const p = nl[nl.length - i - 1] || \"0\";\n        params = p + params;\n      }\n      if (nl.length > floatN) strl = nl.substr(0, nl.length - floatN);\n      result = `${strl}.${params}${nr}`;\n    }\n  }\n\n  if (precision && autoFix) {\n    let pal = `${result.split(\".\")[0]}.`;\n    const par = result.split(\".\")[1] || \"\";\n\n    for (let i = 0; i < precision; i += 1) {\n      pal += par[i] || \"0\";\n    }\n    result = pal;\n  }\n\n  if (result.length > 14) {\n    const arry = result.split(\".\");\n    if (arry[0].length > 14) {\n      result = `${arry[0].slice(0, 14)}+`;\n    } else {\n      result = result.slice(0, 13);\n      if (result.indexOf(\".\") === 12) {\n        result = result.slice(0, 12);\n      }\n    }\n  }\n\n  return `${flag ? \"-\" : \"\"}${result}`;\n};\n\n// 精度计算\nexport const fixD = (num, precision) => {\n  precision = precision > -1 ? precision : 0;\n  // num初始化\n  if (`${num}` === \"0\") {\n    // if (!window.parseFloat(precision)) {\n    if (!parseFloat(precision)) {\n      return 0;\n    }\n    return \"0.\".padEnd(precision + 2, \"0\");\n  }\n  if (!num) {\n    return \"--\";\n  }\n  let flag = false;\n  if (parseFloat(num) < 0) {\n    flag = true;\n  }\n\n  const newnum = `${Math.abs(parseFloat(num))}`;\n  if (newnum === \"NaN\") {\n    return \"--\";\n  }\n  let fixNum = newnum;\n  // 科学计数法计算\n  if (newnum.toLowerCase().indexOf(\"e\") > -1) {\n    if (newnum.toLowerCase().indexOf(\"+\") > -1)\n      return fixDEAdd(newnum, precision);\n    const a = newnum.toLowerCase().split(\"e\");\n    let b = a[0];\n    const c = Math.abs(parseFloat(a[1]));\n    let d = \"\";\n    let h = b.length;\n    let i;\n    if (a[0].split(\".\")[1]) {\n      b = a[0].split(\".\")[0] + a[0].split(\".\")[1];\n      h = a[0].split(\".\")[0].length;\n    }\n    for (i = 0; i < c - h; i += 1) {\n      d += \"0\";\n    }\n    fixNum = `0.${d}${b}`;\n  }\n  // 精度格式化\n  // precision初始化\n  if (`${precision}` !== \"0\" && !precision) {\n    return (flag ? \"-\" : \"\") + fixNum;\n  }\n  if (`${parseFloat(num)}` === \"NaN\") {\n    return (flag ? \"-\" : \"\") + fixNum;\n  }\n  const fNum = fixNum.split(\".\");\n  if (precision === 0) {\n    fixNum = parseInt(fixNum, 10);\n  } else if (precision > 0 && fNum[1]) {\n    if (fNum[1].length > precision) {\n      if (fNum[1].indexOf(\"999999999\") > -1) {\n        const s = parseFloat(fixNum).toFixed(precision + 1);\n        fixNum = s.slice(0, s.length - 1);\n      } else {\n        fixNum = `${fNum[0]}.${fNum[1].slice(0, precision)}`;\n      }\n    } else {\n      fixNum = parseFloat(fixNum).toFixed(precision);\n    }\n  } else {\n    fixNum = parseFloat(fixNum).toFixed(precision);\n  }\n  if (fixNum.length >= 14 && fixNum.indexOf(\".\") > -1) {\n    const arry = fixNum.split(\".\");\n    if (arry[0].length > 14) {\n      fixNum = `${arry[0].slice(0, 14)}+`;\n    } else {\n      fixNum = fixNum.slice(0, 13);\n      if (fixNum.indexOf(\".\") === 12) {\n        fixNum = fixNum.slice(0, 12);\n      }\n    }\n  }\n  return (flag ? \"-\" : \"\") + fixNum;\n};\n\n// 输入框\nexport const fixInput = (val, fixs) => {\n  let fix = fixs;\n  if (!fix === 0) {\n    fix = fix || 10;\n  }\n\n  let v = `${fixDEAdd(val, fixs, false)}`;\n  // 操作1\n  // 用户行为 直接上来打个.\n  // 解决方案 置换成0.\n  if (v.charAt(0) === \".\") {\n    v = \"0.\";\n  }\n  // 操作2\n  // 用户行为 打多个点.\n  // 解决方案 保留第二个点以前的数值\n  const strArr = [...v].reduce((res, c) => {\n    if (res[c]) {\n      res[c] += 1;\n    } else {\n      res[c] = 1;\n    }\n    return res;\n  }, {});\n  if (strArr[\".\"] === 2) {\n    const arr = v.split(\".\");\n    v = `${arr[0]}.${arr[1]}`;\n  }\n  // 操作3\n  // 用户行为 小数点后输入超过该币种精度限制\n  // 解决方案 保留该精度之前的数值\n  if (v.indexOf(\".\") !== -1) {\n    const integer = v.split(\".\")[0]; // 整数\n    let decimal = v.split(\".\")[1]; // 小数\n    if (decimal.length > fix) {\n      decimal = decimal.substring(0, fix);\n      v = `${integer}.${decimal}`;\n    }\n  }\n  // 操作4\n  // 用户行为 转成汉语拼音后可输入汉字字母等字符\n  // 解决方案 干掉写入的文字\n  const strKey = Object.keys(strArr);\n  strKey.forEach((c) => {\n    let str = \"01234567890.\";\n    if (fix === 0) {\n      str = \"01234567890\";\n    }\n    if (str.indexOf(c) === -1) {\n      v = v.split(c)[0] + (v.split(c)[1] || \"\");\n    }\n  });\n  // 操作5\n  // 用户行为 输入总长度超过14位 包括.\n  // 解决方案 截取前14位\n  if (v.length > 20) {\n    v = v.substring(0, 20);\n  }\n  return v;\n};\n\n// 向上取整\nexport const mathCeil = (val, n) => {\n  let d = fixD(val, n + 1);\n  const f = Math.pow(10, n);\n  d = precision.times(d, f);\n  let result;\n  if (d > 0) {\n    result = precision.divide(Math.ceil(d), f);\n  } else {\n    result = precision.divide(Math.floor(d), f);\n  }\n  return fixD(result, n);\n};\n\nexport const addCommom = (num, len) => {\n  if (isNaN(num) || !num) return num;\n  num = String(num);\n  if (!isNaN(len)) {\n    if (len === 0) {\n      num = num.split(\".\")[0];\n    }\n    return num.replace(/(\\d+)(\\.\\d+)?/, (a, b, c) => {\n      // console.log(b, c)\n      return (\n        b.replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\") +\n        (c ? c.slice(0, len + 1) : \"\")\n      );\n    });\n  } else {\n    return num.replace(/^\\d+/, (a) => {\n      return a.replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\");\n    });\n  }\n};\n\nexport const timeFormat = (time, type) => {\n  let date = getTimeZone(time);\n  if (!type) return getYMD(date) + \" \" + getHMS(date);\n  switch (type) {\n    case \"HMS\":\n      return getHMS(date);\n    case \"YMD\":\n      return getYMD(date);\n  }\n};\n\nfunction singleFormat(str) {\n  return str.toString().length === 1 ? \"0\" + str : str;\n}\n\nfunction getYMD(time) {\n  let year = time.getFullYear();\n  let month = time.getMonth() + 1;\n  let date = time.getDate();\n  return year + \"-\" + singleFormat(month) + \"-\" + singleFormat(date);\n}\n\nfunction getHMS(time) {\n  let hours = time.getHours();\n  let minutes = time.getMinutes();\n  let seconds = time.getSeconds();\n  return (\n    singleFormat(hours) +\n    \":\" +\n    singleFormat(minutes) +\n    \":\" +\n    singleFormat(seconds)\n  );\n}\nfunction getTimeZone(time) {\n  let GTM_8 = 480; // -480\n  let date = new Date(time);\n  let subMin = date.getTimezoneOffset() + GTM_8;\n  date.setMinutes(date.getMinutes() + subMin);\n  return date;\n}\n\n// 转化为【万】单位(主要用在中文环境下)\nexport const formatNumW = (num) => {\n  if (Number(num) > 10000) {\n    return fixD(Number(num) / 10000, 2) + \"万\";\n  }\n  return num;\n};\n\n// 转化为【百万】单位(主要用在英文环境下)\nexport const formatNumM = (num) => {\n  if (Number(num) > 1000000) {\n    return fixD(Number(num) / 1000000, 2) + \"M\";\n  }\n  return num;\n};\n\nexport const isPC = () => {\n  if (/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\n    // 移动端操作\n    return false;\n  } else {\n    // PC端操作\n    return true;\n  }\n};\n\n// 精确有效数字\nexport const toPrecision = (num, wei = 2) => {\n  let n = Number(num).toPrecision(wei);\n  return Number(n);\n};\n\n/**\n * 自动四舍五入\n *  规则： 如果是整数，则对第一位小数四舍五入\n *        如果是小数或者整数位小于百位的浮点数（如30.124）， 则保留小数点后两位，对第三位四舍五入\n * */\n\nexport const autoRounding = (num) => {\n  const arr = String(num).split(\".\");\n  if (!arr[1]) return num; // 整数不处理\n\n  if (arr[0].length > 2) {\n    // 如果整数部分位数大于2则对小数点后一位进行四舍五入\n    return Number(num).toFixed(0);\n  } else {\n    if (arr[0] != 0) {\n      // 整数部分有值， 则保留两位小数\n      return Number(num).toFixed(2);\n    } else {\n      // 整数部分无值，需要判断0\n      // let w = arr[1].lastIndexOf('0');\n      // return Number(num).toFixed(w+2);\n      let w = 0;\n      let i = 0;\n      while (!Number(arr[1][i])) {\n        i++;\n        w++;\n      }\n      return Number(num).toFixed(w + 2);\n    }\n  }\n};\n\n/**\n * 四舍五入\n */\nexport const toRounding = (num, fix = 4) => {\n  return parseFloat(Number(num).toFixed(fix));\n};\n","import { getProtocol, getMainHost } from \"../assets/js/util\";\nlet domain, protocol;\n\ntry {\n  domain = getMainHost();\n  protocol = getProtocol();\n} catch(err) {}\n\nexport default {\n  domain: domain,\n  protocol: protocol,\n  baseUrl: '/baseapi',\n  // baseUrl: 'https://tronsage.trxage.io'\n};\n"],"sourceRoot":""}